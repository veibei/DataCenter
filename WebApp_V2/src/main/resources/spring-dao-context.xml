<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 并设置连接数据库的驱动、URL、用户名、密码， 连接池最大连接数、最小连接数、初始连接数等参数 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://172.27.48.230:3306/test" p:user="admin"
		p:password="admin" p:maxPoolSize="200" p:minPoolSize="2"
		p:initialPoolSize="2" p:maxIdleTime="20"></bean>

	<!-- 定义Hibernate的SessionFactory，并依赖注入数据源，注入上面定义的dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- annotatedClasses属性用于列出全部持久化类 -->
		<property name="annotatedClasses">
			<list>
				<!-- 以下用来列出Hibernate的持久化类 -->
				<value>com.songxu.bean.LogBean</value>
				<value>com.songxu.bean.User</value>
				<value>com.songxu.bean.LogInIp</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表、是否生成SQL语句等 -->
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=false
				hibernate.format_sql=true
				#开启二级缓存
				hibernate.cache.use_second_level_cache=true
				#设置二级缓存的提供者
				hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
			</value>
		</property>
	</bean>

	<!-- dao层 -->
	<bean id="accessDao" class="com.songxu.dao.CheckInDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>

	</bean>
	<bean id="logDao" class="com.songxu.dao.LogDao">
		<property name="sessionFactory" ref="sessionFactory"></property>

	</bean>
	<bean id="logDaoQuery" class="com.songxu.dao.LogDaoQueryImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>

	</bean>
	<bean id="userPageDao" class="com.songxu.dao.UserPageDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>

	</bean>
	
	<bean id="rateAnalysisDao" class="com.songxu.dao.RateAnalysisDao">
		<property name="MemecachedOperate" ref="memcachedOperate"></property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!-- 配置事务增强处理Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true" />
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>


	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut" expression="execution(* com.songxu.dao.*.*(..))" />
		<!-- Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
		<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice" />
	</aop:config>

</beans>
